version: "3.9"

services:
  api:
    restart: always
    build:
      context: .
      dockerfile: ./src/RiderGo.API/Dockerfile
    container_name: ridergo-api
    ports:
      - "5000:8080"
    environment:
      - ASPNETCORE_URLS=http://+:8080
      - ASPNETCORE_ENVIRONMENT=Docker
      - ConnectionString__DefaultConnection=Host=db;Port=5432;Database=RiderGo;Username=postgres;Password=1q2w3e4r@#$
      - PubSub__EmulatorHost=pubsub:8085
    depends_on:
      pubsub:
        condition: service_healthy
      
  db:
    image: postgres:15
    container_name: ridergo-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1q2w3e4r@#$
      POSTGRES_DB: RiderGo
    ports:
      - "5433:5432"
    volumes:
      - ridergo_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d RiderGo"]
      interval: 5s
      timeout: 5s
      retries: 5

  pubsub:
    image: google/cloud-sdk:emulators
    container_name: ridergo-pubsub
    command: gcloud beta emulators pubsub start --host-port=0.0.0.0:8085
    ports:
      - "8085:8085"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8085"]
      interval: 5s
      timeout: 3s
      retries: 10

volumes:
  ridergo_data: